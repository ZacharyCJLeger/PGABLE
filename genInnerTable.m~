function genInnerTable
    
GA.model(CGA)
    be = [1,no,e1,e2,e3,ni, no^e1,no^e2,no^e3,no^ni, e1^e2,e1^e3,e1^ni, e2^e3,e2^ni, e3^ni,...
         no^e1^e2,no^e1^e3,no^e1^ni, no^e2^e3,no^e2^ni, no^e3^ni, e1^e2^e3,e1^e2^ni, e1^e3^ni, e2^e3^ni,...
	  no^e1^e2^e3, no^e1^e2^ni, no^e1^e3^ni, no^e2^e3^ni, e1^e2^e3^ni, no^e1^e2^e3^ni];
for i=1:32
    ben(i) = -1*be(i);
end



sz = 32;

function gamma = reverseLookup(a)
    gamma=0;
    for i=1:32
        if eeq(a,be(i))
	       gamma = i;
	       return;
       end
       if eeq(a,ben(i))
	       gamma = -i;
       end
    end
end
    
function ip = computeInner(a,b)
    ip = 0;
    for r=0:5
      for s=0:5
         rslt = grade(a,r)*grade(b,s);
         ip = ip+grade(rslt,abs(r-s));
      end
    end
end


 for i=1:32
    for j=1:32
        ip = computeInner(be(i),be(j));
        fprintf("%-14s . %-14s = %-14s gamma %d\n",char(be(i)), char(be(j)), char(ip),reverseLookup(ip));
    end
 end


 end
